{"version":3,"sources":["components/API.js","components/Employee.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["API","getEmployees","axios","get","SearchBar","Search","Employee","state","employeeList","then","res","console","log","setState","data","results","catch","err","this","columns","dataField","text","style","backgroundColor","hidden","sort","align","formatter","cell","row","alt","width","src","className","keyField","search","props","searchProps","baseProps","hover","Component","styles","navbarStyle","background","height","link","color","fontSize","textDecoration","margin","lineHeight","Navbar","href","App","fixed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAuBeA,EAlBH,CACVC,aAAc,WAEZ,OAAOC,IAAMC,IAAI,8D,yCCHbC,EAAcC,SAAdD,UAwIOE,E,4MArIXC,MAAQ,CACJC,aAAc,I,EAalBP,aAAe,WACXD,EAAIC,eACCQ,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAEL,aAAcE,EAAII,KAAKC,UACvCJ,QAAQC,IAAI,EAAKL,MAAMC,iBAE1BQ,OAAM,SAAAC,GAAG,OAAIN,QAAQC,IAAIK,O,uDAjBlC,WAIIC,KAAKjB,iB,oBAiBT,WAAU,IAAD,OAICkB,EAAU,CAAC,CACbC,UAAW,aACXC,KAAM,KACNC,MAAO,CAAEC,gBAAiB,WAC1BC,QAAQ,GACT,CACCJ,UAAW,YACXC,KAAM,YACNC,MAAO,CAAEC,gBAAiB,WAC1BE,MAAM,GACP,CACCL,UAAW,aACXC,KAAM,aACNC,MAAO,CAAEC,gBAAiB,WAC1BE,MAAM,GACP,CACCL,UAAW,QACXC,KAAM,SACP,CACCD,UAAW,OACXC,KAAM,QACP,CACCD,UAAW,UACXC,KAAM,MACNI,MAAM,GACP,CACCL,UAAW,SACXC,KAAM,SACNK,MAAO,SACPD,MAAM,GACP,CACCL,UAAW,oBACXC,KAAM,QACNM,UAMJ,SAAwBC,EAAMC,GAC1B,OAAQ,qBAAKC,IAAI,YAAYR,MAAO,CAAES,MAAO,IAAMC,IAAKJ,OAM5D,OA2BI,cA1BA,CA0BA,OAAKK,UAAU,MAAf,UACI,oBAAIA,UAAU,eAAd,4BAEA,cAAC,IAAD,CACIC,SAAS,KACTpB,KAAMI,KAAKX,MAAMC,aACjBW,QAASA,EACTgB,QAAM,EAJV,SAMQ,SAAAC,GAEI,OADAzB,QAAQC,IAAI,UAAWwB,GAEnB,gCACI,uBACA,cAAChC,EAAD,eAAegC,EAAMC,cACrB,uBAEA,cAAC,IAAD,2BACQD,EAAME,WADd,IAEIC,OAAK,EACLL,SAAS,aACTpB,KAAM,EAAKP,MAAMC,aACjBW,QAASA,kB,GA7H1BqB,aCLjBC,EAAS,CACXC,YAAa,CACXC,WAAY,UACZC,OAAQ,QAEVC,KAAM,CACNC,MAAO,QACPC,SAAU,SACVC,eAAgB,OAChBC,OAAQ,MACRC,WAAY,IAcDC,MARb,WACE,OACE,qBAAK7B,MAAOmB,EAAOC,YAAaT,UAAU,SAA1C,SACE,mBAAGX,MAAOmB,EAAOI,KAAMO,KAAK,IAA5B,yCCNOC,MATf,WACE,OACE,gCACE,cAAE,EAAF,CAASC,MAAM,QACf,cAAE,EAAF,QCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhD,MAAK,YAAkD,IAA/CiD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.09ba9284.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n//\r\n// Export an object with a \"search\" method that searches the for random employees\r\n\r\nconst API = {\r\n  getEmployees: function() {\r\n\r\n    return axios.get(\"https://randomuser.me/api/?results=20&format=JSON&nat=us\");\r\n  }\r\n\r\n    // axios\r\n    //   .get(\"https://randomuser.me/api/?results=30&format=JSON\")\r\n    //   .then(response => {\r\n    //     console.log(response.data.results);\r\n    //     return(response);\r\n    //     //this.setState({ users: response.data.results });\r\n    //   })\r\n    //   .catch(error => {\r\n    //     console.log(error);\r\n    //   });\r\n};\r\n\r\nexport default API;","import React, { Component } from \"react\";\r\nimport API from \"./API.js\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\n\r\nconst { SearchBar } = Search;\r\n\r\nclass Employee extends Component {\r\n    state = {\r\n        employeeList: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        //\r\n        // could keep the getEmployees code in here, load when component has mounted\r\n\r\n        this.getEmployees();\r\n    };\r\n\r\n    //\r\n    // get a list of employees and setSate of employee list with the results\r\n\r\n    getEmployees = () => {\r\n        API.getEmployees()\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({ employeeList: res.data.results })\r\n                console.log(this.state.employeeList);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    render() {\r\n        //\r\n        // array of columns definitions for our table\r\n\r\n        const columns = [{\r\n            dataField: \"login.uuid\",\r\n            text: \"Id\",\r\n            style: { backgroundColor: \"#fdfcdc\" },\r\n            hidden: true\r\n        }, {\r\n            dataField: \"name.last\",\r\n            text: \"Last Name\",\r\n            style: { backgroundColor: \"#e1f1fd\" },\r\n            sort: true\r\n        }, {\r\n            dataField: \"name.first\",\r\n            text: \"First Name\",\r\n            style: { backgroundColor: \"#e1f1fd\" },\r\n            sort: true\r\n        }, {\r\n            dataField: \"email\",\r\n            text: \"Email\"\r\n        }, {\r\n            dataField: \"cell\",\r\n            text: \"Cell\"\r\n        }, {\r\n            dataField: \"dob.age\",\r\n            text: \"Age\",\r\n            sort: true\r\n        }, {\r\n            dataField: \"gender\",\r\n            text: \"Gender\",\r\n            align: \"center\",\r\n            sort: true\r\n        }, {\r\n            dataField: \"picture.thumbnail\",\r\n            text: \"Image\",\r\n            formatter: imageFormatter\r\n        }];\r\n\r\n        //\r\n        // format the image column \r\n\r\n        function imageFormatter(cell, row) {\r\n            return (<img alt=\"emp image\" style={{ width: 50 }} src={cell} />)\r\n        }\r\n\r\n        //\r\n        // kept the html table for reference but is replaced with the react-bootrap-table\r\n\r\n        return (\r\n            // <div>\r\n            //     <table>\r\n            //         <tbody>\r\n            //             <tr>\r\n            //                 <td> Name </td>\r\n            //                 <td> Cell </td>\r\n            //                 <td> City </td>\r\n            //                 <td> Gender </td>\r\n            //             </tr>\r\n\r\n            //             {this.state.employeeList.map((emp, index) => (\r\n            //                 <tr key={index}>\r\n            //                     <td> {emp.name.last}  {emp.name.first} </td>\r\n            //                     <td> {emp.cell} </td>\r\n            //                     <td> {emp.location.city} </td>\r\n            //                     <td> {emp.gender} </td>\r\n            //                 </tr>\r\n            //             )\r\n            //             )}\r\n            //         </tbody>\r\n            //     </table>\r\n            // </div>\r\n\r\n            // --------------------------------------------------\r\n            // the toolkitprovider allows us the search the table \r\n\r\n            <div className=\"App\">\r\n                <h1 className=\"Table-header\">Employee Table</h1>\r\n\r\n                <ToolkitProvider\r\n                    keyField=\"id\"\r\n                    data={this.state.employeeList}\r\n                    columns={columns}\r\n                    search>\r\n                    {\r\n                        props => {\r\n                            console.log(\"props: \", props)\r\n                            return (\r\n                                <div>\r\n                                    <br />\r\n                                    <SearchBar {...props.searchProps} />\r\n                                    <hr />\r\n\r\n                                    <BootstrapTable\r\n                                        {...props.baseProps}\r\n                                        hover\r\n                                        keyField=\"login.uuid\"\r\n                                        data={this.state.employeeList}\r\n                                        columns={columns} />\r\n                                </div>\r\n                            )\r\n                        }}\r\n                </ToolkitProvider>\r\n            </div>\r\n        )\r\n    }\r\n};\r\nexport default Employee;\r\n","import React from \"react\";\r\n\r\nconst styles = {\r\n    navbarStyle: {\r\n      background: \"#4663ac\",\r\n      height: \"60px\"\r\n    },\r\n    link: {\r\n    color: \"white\",\r\n    fontSize: \"1.3rem\",\r\n    textDecoration: \"none\",\r\n    margin: \"5px\",\r\n    lineHeight: 3\r\n    }\r\n  };\r\n  \r\n  // We use JSX curly braces to evaluate the style object on the JSX tag\r\n  \r\n  function Navbar() {\r\n    return (\r\n      <nav style={styles.navbarStyle} className=\"navbar\">\r\n        <a style={styles.link} href=\"/\">Employee Directory (#19)</a>\r\n      </nav>\r\n    );\r\n  }\r\n\r\nexport default Navbar;\r\n\r\n\r\n\r\n","import React from \"react\";\nimport './App.css';\n\nimport Employee from './components/Employee.js';\nimport Navbar from './components/Navbar.js';\n\nfunction App() {\n  return (\n    <div>\n      < Navbar fixed=\"top\" />\n      < Employee />\n    </div>    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}